Uncharted Territory ゲームデザイン仕様書
1. ゲーム概要
タイトル
Uncharted Territory（未知の領域）

ジャンル
2D宇宙4Xゲーム

インスピレーション
Mini Metro(シンプルな見た目の2Dゲーム)
X4: Foundations (4Xゲーム)
Mount&Blade(成りあがっていく過程を楽しむ)

コアコンセプト
プレイヤーは自律的に動く経済圏に介入する一人の「ルーター（航路設計者）」となる。ゲーム内ではプレイヤーが干渉せずとも、小惑星から自動的に原材料が掘り出され、工場ステーションで加工され、物流は他のNPCが操作する船が自律的に動き経済が回っている。交易に手を出すのは手軽でいい戦略だ。ただ、競合するNPCオペレーターがひしめき合う、リアルタイムで変動する市場経済の中で、儲けることができればの話だが。経済の発展は取り残された者たちや、警察の目の行き届かない地域も作っている。戦闘が得意なら交易船を襲い生き血を吸って荒稼ぎもいいかもしれない。警察も治安の悪化を手をこまねいて眺めているわけではない。いずれあなたの悪名は広まり、懸賞金目当てのハンターが追ってくるだろう。あなたは海賊狩りとしてハイリスクハイリターンな生活を送ることもできる。すべてはあなた次第だ。

2. 世界観・ストーリー設定
時代背景
AIによる究極のオーケストレーションが実現した未来。人類は生産や物流の大部分を自律システムに委ね、フロンティアの拡大を続けている。プレイヤーは、この自動化された宇宙で、AIの監督と重要判断を担う「ルーター」の一人としてキャリアをスタートする。

重要な技術設定
生体認証システム (Bio-Auth Override): AIの判断には論理的な最適解が求められるが、非人道的な判断やシステムの暴走を防ぐため、艦隊の編成や大規模な投資など、戦略的な最終決定には必ず人間のオペレーターによる生体認証が必要となる。これが、プレイヤーがAIを「利用する」立場にある根拠となる。

インパルスドライブ: 光速に近い速度での宇宙航行を可能にする推進システムです。

セクター：宇宙空間はほとんど何もないが、意味のある領域に工場ステーションや居住コロニーが集中しセクターを作っている。セクターとセクターの間は途方もない距離が離れていてインパルスドライブでは到達不能であるが、ゲートシステムによるワームホール安定化で瞬時に移動可能。

ゲートシステムと磁気嵐: セクター間を繋ぐゲートは通常安定しているが、「磁気嵐」によって頻繁に接続が不安定化し、切断されることがある。ゲーム開始時点では大規模な磁気嵐によって既知宇宙が分断されている。これらの不安定なゲートは、ゲートスタビライザーに多額の投資を行うことで安定化させ、恒久的な航路として開拓できる。

3. ゲームプレイ
3.1 ゲームの目的
初期セクター（3つ）内で、チュートリアルをこなし、自動化された交易の流れや、海賊狩りのミッションを体験します。
ゲームの進行度（時間・総資産など）に応じて自動的に解放される新しいセクターへ探索を進めていきます。

3.2 達成目標（エンドコンテンツ）
本作に明確なクリア条件はありませんが、プレイヤーは以下のような目標を自由に追求できます。
銀河の開拓者: 全ての不安定ゲートを安定化させ、宇宙の全貌を明らかにする。
経済覇者: 総資産で競合を圧倒し、特定の重要交易品（Supercomputerなど）の市場を支配する。
派閥の盟主: 特定のNPC派閥から絶大な信頼を得て、その公式ロジスティクスパートナーとなる。
伝説のバウンティハンター / 大海賊: 悪名または名声を最大まで高める。

3.3 ゲームオーバー条件
なし
仮に操作可能な船が全部撃沈された場合は、無償で最低性能の宇宙船が支給される。

4. ゲームメカニクス
4.1 基本要素
発見（Discovery）
プレイヤーが能動的に探索を行うことはありません。
開拓: プレイヤーは「発見」するのではなく、不安定なゲートに投資することで能動的に「開拓」する。開拓には莫大なコストがかかるため、他のプレイヤー（NPC）との協力や競争が発生する。

各セクターはプロシージャル生成され、独自のステーション配置と最大4つのゲートを持ちます。セクターが広がるにつれ、競合となるNPCプレイヤーも出現し数が増えていきます。

交易（Trade）
ステーションから200m以内で商品の売買が可能となる。
価格は各ステーションの在庫量に応じてリアルタイムで変動します。

4.2 交易AI 仕様
4.2.1 概要
本作の交易システムの中核をなすAI。各プレイヤー（NPCおよび人間プレイヤー）に1つずつ割り当てられる「指示役AI」が、配下の交易船の交易活動を完全に自動で制御する。プレイヤーは交易船に直接的な指示を行わない。本仕様は、その指示役AIの意思決定ロジックを定義するものである。

目的:
効率的かつ自律的な交易活動の実現
組み合わせ爆発を避け、AIの処理負荷を現実的な範囲に収める
全交易船が単一の航路に殺到する群衆行動の回避

4.2.2 AIの基本設計
入力情報
指示役AIは、以下の常に最新かつ正確な情報へアクセスできるものとする。
既知宇宙の全星系/拠点における全商品の価格と在庫量
既知宇宙の全星系/拠点の位置座標
自プレイヤー配下の全交易船の状態（アイドル、交易実行中など）と現在位置
全プレイヤー（自・他プレイヤー含む）の交易船の航路情報（どの船がどこからどこへ向かっているか）

出力情報
指示役AIは、状態が「アイドル」の交易船に対し、以下の要素を含む交易コマンドを発行する。
コマンド形式: [買付地, 売却地, 取引商品, 最低利益額]

4.2.3 前提条件
全ての交易船は、同一の性能（積載量、航行速度）を持つものとする。
海賊、突発的なイベント（星系封鎖など）の要素は、このバージョンでは考慮しない。

4.2.4 AIの処理フロー
指示役AIは、アイドル状態の船が存在する場合に以下の3フェーズから成る処理を順次実行し、交易コマンドを決定する。

航路発見フェーズ: 利益の出る可能性のある航路を効率的にリストアップする。
航路評価フェーズ: 発見した航路をスコアリングし、AIの個性に基づき優先順位を決定する。
交易船への割り当てフェーズ: 評価に基づき、船が分散するように航路を割り当てる。

フェーズ1: 航路発見
システム上の計算負荷を抑えつつ、有望な航路を発見する。

処理:
ゲーム内に存在する全ての「商品」と、その在庫が1以上ある「供給地」のリストを作成する。
各「供給地」の売値よりも高い買値がついている「需要地」を全拠点から探索する。
利益が見込める [取引商品, 買付地, 売却地, 買値, 売値] の組み合わせを全て抽出し、「航路候補リスト」を作成する。

フェーズ2: 航路評価（スコアリング）
航路候補リストの各航路に対して、AIの個性を反映したスコアを算出する。

スコア計算式:
最終スコア = (w1 * 期待利益) - (w2 * 航行時間) - (w3 * 競合)

評価項目:
期待利益: (売値 - 買値) * 交易船の積載量 で算出される、単純な利益の見込み額。
航行時間: 買付地から売却地までの距離と船速から算出。時間が長いほど減点対象となる。
競合: 他プレイヤー（自プレイヤー含む）の船が、既に同一の航路（同一の目的地へ同一の商品を輸送中）または類似の航路に向かっている場合に加算されるペナルティ。競合船の数が多いほど大幅な減点対象となる。

4.2.5 AIの個性（性格）
NPCプレイヤーごとに異なる交易スタイルを実現するため、スコア計算式の重み付け係数 (w1, w2, w3) を変更する。これにより、各NPCの性格を表現する。

堅実型 (Balanced): w1=1.0, w2=1.0, w3=1.0
利益、時間、競合をバランス良く評価する。標準的なAI。

攻撃型 (Aggressive): w1=1.5, w2=0.5, w3=0.7
利益（w1）を最重要視し、時間（w2）や多少の競合（w3）を厭わない。ハイリスク・ハイリターンを狙う傾向が強くなる。

臆病型 (Timid): w1=0.8, w2=1.2, w3=1.5
競合（w3）と時間（w2）を強く警戒し、利益（w1）が多少低くても、安全で確実な短い航路を好む。

4.2.6 フェーズ3: 交易船への割り当て
スコアに基づき、アイドル状態の船に交易コマンドを発行する。群衆行動を避けるため、以下の逐次処理を行う。

アイドル状態の全交易船のリストを取得する。
1隻目の船のために、航路候補リストの全航路スコアを計算し、最高スコアの航路を割り当てる。
割り当てた航路の競合状況を更新する（例：競合ペナルティの基礎値を上げる）。
2隻目の船のために、更新された競合状況を基に再度全ての航路スコアを計算する。
現時点での最高スコアの航路を2隻目の船に割り当てる。
全てのアイドル船に航路が割り当てられるか、最低利益額を満たす航路がなくなるまで、ステップ3〜5を繰り返す。
このプロセスにより、先行する船の選択が後続の船の判断に影響を与え、結果として交易ルートが自然に分散される。

4.2.7 パラメータ定義
最低利益額
プレイヤーがAIに対して設定できる閾値。
役割: 航路評価フェーズにおける事前フィルターとして機能する。算出された期待利益がこの数値を下回る航路は、スコア計算の対象から除外される。これにより、AIはプレイヤーが非効率と見なす取引を試みなくなる。

4.3 生産・消費システム
商品カテゴリと流通
原料: Ore、Silicon、Water, Carbon, 
中間財: Steel plates, Silicon wafers, Microchips, Quantum Tubes, Bio-nutrients, 
完成品: Hull Parts、Food, Consumer goods, Progenitor cells, Supercomputer,

ステーションタイプ
鉱山（Mine）: 原料を生産します。
精錬所 (Refinery): 原料を消費し、基礎的な中間財（Steel Plates, Silicon Wafersなど）を生産する。
工場 (Factory): 中間財を消費し、より高度な中間財や完成品を生産する。工場の種類によって生産ラインは特化される（例：チップ工場、造船部品工場、食品工場）。
居住コロニー (Habitat): 完成品の主要な消費者。人口規模に応じて近隣セクターのステーションに労働力を供給する（生産力にボーナス・ペナルティを付ける）。経済の最終的な需要を生み出す中心地でシンクとなる。
各種特化交易港（Trading Hub）: 生産は行いません。（重工業、消費財、バイオ）の特化領域のみ商品を扱います。市場価格の形成において中心的な役割を担います。

生産サイクル
60秒ごとに各ステーションで生産・消費活動が発生します。
生産量と消費量はステーションのタイプによって固定され、労働力ボーナスによって増減した値で最終的に決定される。
生産するステーションで在庫が不足した場合は、サイクルがスキップされる。
経済の停滞を防ぐため、交易港では生産はしないものの、在庫が時間経過で少しずつ消費されます（経済のシンク）。居住コロニーでは人口規模に応じた量の完成品を消費します。在庫不足の場合は、移住により人口が徐々に減っていき需要も減ります。

価格決定メカニズム
基準価格 (Base Price):
各商品には、需給が完全に均衡している状態での「基準価格」が設定される。

非線形価格カーブ:
在庫率に基づく価格計算式は、線形ではなく**S字カーブ（シグモイド曲線）**やそれに類する非線形な計算式を用いる。
効果: 在庫率が50%に近い中間域では価格は比較的安定するが、在庫が枯渇（0%近辺）したり、過剰（100%近辺）になったりした場合に価格が爆発的に変動する。これにより、「買い占め」や「ダンピング」のリスクとリターンが高まり、プレイヤーの介入を促す。

価格弾力性 (Price Elasticity):
商品のカテゴリに応じて、価格の変動幅（基準価格からの乖離率）を変える。
低弾力性商品 (必需品): Foodなど。価格変動幅は±30%程度と小さく、比較的安定している。
中弾力性商品 (工業材): Steel Plates, Hull Partsなど。標準的な変動幅（±70%など）を持つ。
高弾力性商品 (ハイテク・奢侈品): Progenitor cells, Supercomputerなど。価格変動幅は±200%など非常に大きく、ハイリスク・ハイリターンな交易対象となる。

4.4 セクターシステム
初期セクターは3つです。
各セクターは2000m × 2000mの2D空間です。
セクター間はゲートによって接続されます。

5. プレイヤー進行
5.1 初期状態
開始セクター：Neter（Sector 0）

初期資金：100,000クレジット

初期船舶：貨物船「Mercury」×1隻
積載容量：1000
移動速度：400m/s

5.2 成長曲線
序盤（0〜30分）

チュートリアルを通じて、自動で動き回る船を眺めながら、UIの見方、情報の読み取り方、新しい船の購入方法を学びます。

中盤（30分〜2時間）

新しいセクターが解放され始め、複数のセクターにまたがる複雑な交易網が形成されていく様子を観察します。
利益を再投資して船を増やし、船団全体の収益性を高めていきます。

終盤（2時間以降）

宇宙全体に張り巡らされた交易ネットワークを俯瞰し、ボトルネックの解消や機会損失の最小化を目指して、船団構成の最適化を図ります。

6. UI/UX設計
6.1 画面レイアウト
Mini Metroに強くインスパイアされた、ミニマリストで機能的なUIを目指します。

中央エリア: ゲームのメイン画面です。マウスホイールで自在に拡大・縮小、右クリックドラッグでパンが可能です。既知の宇宙全体が常に表示され、各セクターは四角い領域として、ゲート同士は滑らかな曲線コネクタで結ばれます。船はシンプルなアイコンとして、この上を移動します。

左パネル（フローティングウィンドウで任意位置にドラッグ可能）: プレイヤーの船団リスト、各船のステータス、収支ログを表示します。

右パネル（フローティングウィンドウで任意位置にドラッグ可能）: マップ上のステーションを選択した際に、その在庫や価格情報などの詳細を表示します。各商品の平均価格、最安価格などのステータスのモニタも表示します。
サプライチェーン可視化: ステーションを選択すると、そのステーションが必要とする資源の供給元と、生産品の輸送先がラインで表示され、物流の詰まりを視覚的に理解できる。
経済ヒートマップ: 特定の商品を選択すると、宇宙マップ全体でその商品の価格が高い（赤）/安い（青）かが色で表示され、交易機会を直感的に発見できる。

6.2 操作方法
プレイヤーの操作はシンプルです。

マウス左クリック: 船、ステーション、ゲートを選択して詳細情報を表示します。

マウス右クリックドラッグ: マップをパンします。

マウスホイール: マップを拡大・縮小します。

UIボタン:

造船所での新しい船の購入

船を選択しての売却

船の交易AIのON/OFF切り替え（修理や待機させたい場合など）

6.3 情報表示
船の位置、速度、積荷、現在の目的地といった情報はリアルタイムで更新されます。

ステーションの在庫と価格も常に最新の状態が表示されます。

プレイヤーは収支履歴をグラフで確認できます。

6.4 カラースキーム
背景は黒を基調とし、UIや船、コネクタには蛍光ピンク、グリーン、ブルーなど、視認性の高いサイバーな色彩を採用して未来的な印象を与えます。

7. 技術仕様
7.1 ゲーム更新サイクル
サーバー側：1Hz（1s間隔）経済シミュレーション
クライアント側：30Hz（33.33ms間隔）での表示更新

7.2 ネットワーク設計
WebSocketによるリアルタイム双方向通信を利用します。
クライアントからはステートレスなコマンド（船の購入など）のみを送信します。

7.3 データ永続化
supabaseでゲーム状態を永続化します。

7.4 基本仕様
モノレポ構成で開発します。
Cloudflareの機能を利用してユーザー認証を実装します。
Cloudflare Workers上でサーバレスアーキテクチャを実現します。
supabaseでゲーム状態を永続化します。
