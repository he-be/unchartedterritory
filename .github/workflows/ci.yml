name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    name: Run Tests and Checks
    runs-on: self-hosted
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json
            frontend/package-lock.json
      
      - name: Cache root node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: root-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            root-deps-
            
      - name: Cache backend node_modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: backend-deps-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            backend-deps-
            
      - name: Cache frontend node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: frontend-deps-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            frontend-deps-
      
      - name: Install root dependencies
        run: npm install --prefer-offline
      
      - name: Install backend dependencies
        run: cd backend && npm ci --prefer-offline
      
      - name: Install frontend dependencies
        run: cd frontend && npm ci --prefer-offline
      
      - name: Run lint
        run: npm run lint
      
      - name: Run typecheck
        run: npm run typecheck
      
      - name: Run tests
        run: npm test
      
      # Coverage Report disabled while tests are disabled due to vitest-pool-workers issue
      # - name: Coverage Report
      #   if: github.event_name == 'pull_request'
      #   uses: davelosert/vitest-coverage-report-action@v2
      
      - name: Build for Cloudflare Workers
        run: npm run build

      - name: All checks passed
        if: success()
        run: echo "âœ… All tests, linting, type checking, and build completed successfully!"

  deploy-staging:
    name: Deploy to Staging (PR Preview)
    runs-on: self-hosted
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json
            frontend/package-lock.json
      
      - name: Cache root node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: root-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            root-deps-
            
      - name: Cache backend node_modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: backend-deps-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            backend-deps-
            
      - name: Cache frontend node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: frontend-deps-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            frontend-deps-
      
      - name: Install root dependencies
        run: npm install --prefer-offline
      
      - name: Install backend dependencies
        run: cd backend && npm ci --prefer-offline
      
      - name: Install frontend dependencies
        run: cd frontend && npm ci --prefer-offline
      
      - name: Build backend for Cloudflare Workers
        run: npm run build:backend
      
      - name: Build frontend for Cloudflare Workers
        run: npm run build:frontend
      
      - name: Deploy to staging (backend â†’ frontend order required for Service Bindings)
        run: npm run deploy:staging
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PR_NUMBER: ${{ github.event.number }}
      
      - name: Comment PR with staging URLs
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            const comment = `## ðŸš€ Staging Deployment Ready!
            
            Your PR has been deployed to staging environments:
            
            - **Backend**: https://unchartedterritory-pr-${prNumber}.masahiro-hibi.workers.dev
            - **Frontend**: https://unchartedterritory-frontend-pr-${prNumber}.masahiro-hibi.workers.dev
            
            ### Test Your Changes:
            - API Endpoint: \`/api/game/new\`
            - Health Check: \`/api/health\`
            - Debug Info: \`/debug\`
            
            ðŸ§ª **Testing Checklist:**
            - [ ] Frontend loads correctly
            - [ ] API calls work without 404 errors
            - [ ] Game creation flow functions
            - [ ] No console errors
            `;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  deploy-production:
    name: Deploy to Production
    runs-on: self-hosted
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json
            frontend/package-lock.json
      
      - name: Cache root node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: root-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            root-deps-
            
      - name: Cache backend node_modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: backend-deps-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            backend-deps-
            
      - name: Cache frontend node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: frontend-deps-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            frontend-deps-
      
      - name: Install root dependencies
        run: npm install --prefer-offline
      
      - name: Install backend dependencies
        run: cd backend && npm ci --prefer-offline
      
      - name: Install frontend dependencies
        run: cd frontend && npm ci --prefer-offline
      
      - name: Build backend for Cloudflare Workers
        run: npm run build:backend
      
      - name: Build frontend for Cloudflare Workers
        run: npm run build:frontend
      
      - name: Deploy to production (backend â†’ frontend order required for Service Bindings)
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
